<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.graduation.mapper.RequireMapper" >
  <resultMap id="BaseResultMap" type="com.graduation.pojo.Require" >
    <id column="requireid" property="requireid" jdbcType="INTEGER" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="starttime" property="starttime" jdbcType="DATE" />
    <result column="endtime" property="endtime" jdbcType="DATE" />
    <result column="need" property="need" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="submit" property="submit" jdbcType="INTEGER" />
    <result column="agree" property="agree" jdbcType="INTEGER" />
    <result column="punish" property="punish" jdbcType="INTEGER" />
    <result column="isdeleted" property="isdeleted" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="createpersom" property="createpersom" jdbcType="VARCHAR" />
    <result column="temp1" property="temp1" jdbcType="VARCHAR" />
    <result column="temp2" property="temp2" jdbcType="VARCHAR" />
    <result column="temp3" property="temp3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    requireid, position, department, number, starttime, endtime, need, content, submit, 
    agree, punish, isdeleted, createtime, createpersom, temp1, temp2, temp3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.graduation.pojo.RequireExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from require
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from require
    where requireid = #{requireid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from require
    where requireid = #{requireid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.graduation.pojo.RequireExample" >
    delete from require
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.graduation.pojo.Require" >
    insert into require (requireid, position, department, 
      number, starttime, endtime, 
      need, content, submit, 
      agree, punish, isdeleted, 
      createtime, createpersom, temp1, 
      temp2, temp3)
    values (#{requireid,jdbcType=INTEGER}, #{position,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{starttime,jdbcType=DATE}, #{endtime,jdbcType=DATE}, 
      #{need,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{submit,jdbcType=INTEGER}, 
      #{agree,jdbcType=INTEGER}, #{punish,jdbcType=INTEGER}, #{isdeleted,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{createpersom,jdbcType=VARCHAR}, #{temp1,jdbcType=VARCHAR}, 
      #{temp2,jdbcType=VARCHAR}, #{temp3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.graduation.pojo.Require" >
    insert into require
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="requireid != null" >
        requireid,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="need != null" >
        need,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="submit != null" >
        submit,
      </if>
      <if test="agree != null" >
        agree,
      </if>
      <if test="punish != null" >
        punish,
      </if>
      <if test="isdeleted != null" >
        isdeleted,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="createpersom != null" >
        createpersom,
      </if>
      <if test="temp1 != null" >
        temp1,
      </if>
      <if test="temp2 != null" >
        temp2,
      </if>
      <if test="temp3 != null" >
        temp3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="requireid != null" >
        #{requireid,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=DATE},
      </if>
      <if test="need != null" >
        #{need,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="submit != null" >
        #{submit,jdbcType=INTEGER},
      </if>
      <if test="agree != null" >
        #{agree,jdbcType=INTEGER},
      </if>
      <if test="punish != null" >
        #{punish,jdbcType=INTEGER},
      </if>
      <if test="isdeleted != null" >
        #{isdeleted,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createpersom != null" >
        #{createpersom,jdbcType=VARCHAR},
      </if>
      <if test="temp1 != null" >
        #{temp1,jdbcType=VARCHAR},
      </if>
      <if test="temp2 != null" >
        #{temp2,jdbcType=VARCHAR},
      </if>
      <if test="temp3 != null" >
        #{temp3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.graduation.pojo.RequireExample" resultType="java.lang.Integer" >
    select count(*) from require
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update require
    <set >
      <if test="record.requireid != null" >
        requireid = #{record.requireid,jdbcType=INTEGER},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null" >
        starttime = #{record.starttime,jdbcType=DATE},
      </if>
      <if test="record.endtime != null" >
        endtime = #{record.endtime,jdbcType=DATE},
      </if>
      <if test="record.need != null" >
        need = #{record.need,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.submit != null" >
        submit = #{record.submit,jdbcType=INTEGER},
      </if>
      <if test="record.agree != null" >
        agree = #{record.agree,jdbcType=INTEGER},
      </if>
      <if test="record.punish != null" >
        punish = #{record.punish,jdbcType=INTEGER},
      </if>
      <if test="record.isdeleted != null" >
        isdeleted = #{record.isdeleted,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createpersom != null" >
        createpersom = #{record.createpersom,jdbcType=VARCHAR},
      </if>
      <if test="record.temp1 != null" >
        temp1 = #{record.temp1,jdbcType=VARCHAR},
      </if>
      <if test="record.temp2 != null" >
        temp2 = #{record.temp2,jdbcType=VARCHAR},
      </if>
      <if test="record.temp3 != null" >
        temp3 = #{record.temp3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update require
    set requireid = #{record.requireid,jdbcType=INTEGER},
      position = #{record.position,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      starttime = #{record.starttime,jdbcType=DATE},
      endtime = #{record.endtime,jdbcType=DATE},
      need = #{record.need,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      submit = #{record.submit,jdbcType=INTEGER},
      agree = #{record.agree,jdbcType=INTEGER},
      punish = #{record.punish,jdbcType=INTEGER},
      isdeleted = #{record.isdeleted,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      createpersom = #{record.createpersom,jdbcType=VARCHAR},
      temp1 = #{record.temp1,jdbcType=VARCHAR},
      temp2 = #{record.temp2,jdbcType=VARCHAR},
      temp3 = #{record.temp3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduation.pojo.Require" >
    update require
    <set >
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=DATE},
      </if>
      <if test="need != null" >
        need = #{need,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="submit != null" >
        submit = #{submit,jdbcType=INTEGER},
      </if>
      <if test="agree != null" >
        agree = #{agree,jdbcType=INTEGER},
      </if>
      <if test="punish != null" >
        punish = #{punish,jdbcType=INTEGER},
      </if>
      <if test="isdeleted != null" >
        isdeleted = #{isdeleted,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createpersom != null" >
        createpersom = #{createpersom,jdbcType=VARCHAR},
      </if>
      <if test="temp1 != null" >
        temp1 = #{temp1,jdbcType=VARCHAR},
      </if>
      <if test="temp2 != null" >
        temp2 = #{temp2,jdbcType=VARCHAR},
      </if>
      <if test="temp3 != null" >
        temp3 = #{temp3,jdbcType=VARCHAR},
      </if>
    </set>
    where requireid = #{requireid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduation.pojo.Require" >
    update require
    set position = #{position,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      starttime = #{starttime,jdbcType=DATE},
      endtime = #{endtime,jdbcType=DATE},
      need = #{need,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      submit = #{submit,jdbcType=INTEGER},
      agree = #{agree,jdbcType=INTEGER},
      punish = #{punish,jdbcType=INTEGER},
      isdeleted = #{isdeleted,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createpersom = #{createpersom,jdbcType=VARCHAR},
      temp1 = #{temp1,jdbcType=VARCHAR},
      temp2 = #{temp2,jdbcType=VARCHAR},
      temp3 = #{temp3,jdbcType=VARCHAR}
    where requireid = #{requireid,jdbcType=INTEGER}
  </update>
</mapper>